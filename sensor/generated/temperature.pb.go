// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: proto/temperature.proto

package temperature

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TemperatureRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         float64                `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TemperatureRequest) Reset() {
	*x = TemperatureRequest{}
	mi := &file_proto_temperature_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TemperatureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemperatureRequest) ProtoMessage() {}

func (x *TemperatureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_temperature_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemperatureRequest.ProtoReflect.Descriptor instead.
func (*TemperatureRequest) Descriptor() ([]byte, []int) {
	return file_proto_temperature_proto_rawDescGZIP(), []int{0}
}

func (x *TemperatureRequest) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *TemperatureRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type TemperatureResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         float64                `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TemperatureResponse) Reset() {
	*x = TemperatureResponse{}
	mi := &file_proto_temperature_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TemperatureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemperatureResponse) ProtoMessage() {}

func (x *TemperatureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_temperature_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemperatureResponse.ProtoReflect.Descriptor instead.
func (*TemperatureResponse) Descriptor() ([]byte, []int) {
	return file_proto_temperature_proto_rawDescGZIP(), []int{1}
}

func (x *TemperatureResponse) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *TemperatureResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type StreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamRequest) Reset() {
	*x = StreamRequest{}
	mi := &file_proto_temperature_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamRequest) ProtoMessage() {}

func (x *StreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_temperature_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamRequest.ProtoReflect.Descriptor instead.
func (*StreamRequest) Descriptor() ([]byte, []int) {
	return file_proto_temperature_proto_rawDescGZIP(), []int{2}
}

var File_proto_temperature_proto protoreflect.FileDescriptor

const file_proto_temperature_proto_rawDesc = "" +
	"\n" +
	"\x17proto/temperature.proto\x12\vtemperature\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"d\n" +
	"\x12TemperatureRequest\x12\x14\n" +
	"\x05value\x18\x01 \x01(\x01R\x05value\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"e\n" +
	"\x13TemperatureResponse\x12\x14\n" +
	"\x05value\x18\x01 \x01(\x01R\x05value\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\x0f\n" +
	"\rStreamRequest2\xb5\x01\n" +
	"\x12TemperatureService\x12J\n" +
	"\x0fPushTemperature\x12\x1f.temperature.TemperatureRequest\x1a\x16.google.protobuf.Empty\x12S\n" +
	"\x11StreamTemperature\x12\x1a.temperature.StreamRequest\x1a .temperature.TemperatureResponse0\x01B\x0fZ\r.;temperatureb\x06proto3"

var (
	file_proto_temperature_proto_rawDescOnce sync.Once
	file_proto_temperature_proto_rawDescData []byte
)

func file_proto_temperature_proto_rawDescGZIP() []byte {
	file_proto_temperature_proto_rawDescOnce.Do(func() {
		file_proto_temperature_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_temperature_proto_rawDesc), len(file_proto_temperature_proto_rawDesc)))
	})
	return file_proto_temperature_proto_rawDescData
}

var file_proto_temperature_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_temperature_proto_goTypes = []any{
	(*TemperatureRequest)(nil),    // 0: temperature.TemperatureRequest
	(*TemperatureResponse)(nil),   // 1: temperature.TemperatureResponse
	(*StreamRequest)(nil),         // 2: temperature.StreamRequest
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 4: google.protobuf.Empty
}
var file_proto_temperature_proto_depIdxs = []int32{
	3, // 0: temperature.TemperatureRequest.timestamp:type_name -> google.protobuf.Timestamp
	3, // 1: temperature.TemperatureResponse.timestamp:type_name -> google.protobuf.Timestamp
	0, // 2: temperature.TemperatureService.PushTemperature:input_type -> temperature.TemperatureRequest
	2, // 3: temperature.TemperatureService.StreamTemperature:input_type -> temperature.StreamRequest
	4, // 4: temperature.TemperatureService.PushTemperature:output_type -> google.protobuf.Empty
	1, // 5: temperature.TemperatureService.StreamTemperature:output_type -> temperature.TemperatureResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_temperature_proto_init() }
func file_proto_temperature_proto_init() {
	if File_proto_temperature_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_temperature_proto_rawDesc), len(file_proto_temperature_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_temperature_proto_goTypes,
		DependencyIndexes: file_proto_temperature_proto_depIdxs,
		MessageInfos:      file_proto_temperature_proto_msgTypes,
	}.Build()
	File_proto_temperature_proto = out.File
	file_proto_temperature_proto_goTypes = nil
	file_proto_temperature_proto_depIdxs = nil
}
